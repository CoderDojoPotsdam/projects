/*python program*/# Aufgabe:
# der Hamster steht irgendwo in einem beliebigen Territorium
# ohne innere Mauern; er soll alle Körner fressen

# drehe dich um 180 Grad
def kehrt():
    linksUm() 
    linksUm()
    
# drehe dich um 90 Grad nach rechts
def rechtsUm():
    kehrt()
    linksUm()
    
# der Hamster sammelt alle Koerner eines Feldes ein
def sammle():
    while kornDa():
        nimm()

# Ueberpruefung, ob sich links vom Hamster 
# eine Mauer befindet
def linksFrei():
    linksUm()
    if vornFrei():
        rechtsUm();
        return True
    else:
        rechtsUm()
        return False

# Ueberpruefung, ob sich rechts vom Hamster eine 
# Mauer befindet
def rechtsFrei():
    rechtsUm()
    if vornFrei():
        linksUm()
        return True
    else:
        linksUm()
        return False

# der Hamster laeuft bis zur naechsten Wand
def laufeZurWand():
    while vornFrei():
        vor()
        
# der Hamster laeuft in eine Ecke
def laufeInEcke():
    laufeZurWand()
    linksUm()
    laufeZurWand()
    linksUm()

# der Hamster soll sich in die naechste Reihe in noerdlicher
# Richtung begeben; vom Hamster aus gesehen, liegt diese Reihe
# links von ihm
def begibDichLinksUmInNaechsteReihe():
    linksUm()
    vor()
    linksUm()
 
# der Hamster soll sich in die naechste Reihe in noerdlicher
# Richtung begeben; vom Hamster aus gesehen, liegt diese Reihe
# rechts von ihm
def begibDichRechtsUmInNaechsteReihe():
    rechtsUm()
    vor()
    rechtsUm()
    

# Ueberpruefung, ob in noerdlicher Richtung (vom Hamster aus
# gesehen links) eine weitere nicht mit Mauern besetzte
# Reihe existiert
def weitereReiheLinksVomHamsterExistiert():
    return linksFrei()
 
# Ueberpruefung, ob in noerdlicher Richtung (vom Hamster aus
# gesehen rechts) eine weitere nicht mit Mauern besetzte
# Reihe existiert
def weitereReiheRechtsVomHamsterExistiert():
    return rechtsFrei()

# der Hamster soll alle Koerner in einer Reihe einsammeln
def ernteEineReihe():
    sammle()
    while vornFrei():
        vor()
        sammle()
        
# der Hamster soll alle Koerner in einer Reihe einsammeln;
# er laeuft dabei von Westen nach Osten
def ernteEineReiheNachOsten():
    ernteEineReihe()
 
# der Hamster soll alle Koerner in einer Reihe einsammeln;
# er laeuft dabei von Osten nach Westen
def ernteEineReiheNachWesten():
    ernteEineReihe()
 
# der Hamster soll einzelne Koernerreihen abgrasen,
# so lange noch weitere Reihen existieren; 
# er unterscheidet dabei, ob er die Reihen von 
# Osten oder von Westen aus abgrast
laufeInEcke()
ernteEineReiheNachOsten()
while weitereReiheLinksVomHamsterExistiert():
    begibDichLinksUmInNaechsteReihe()
    ernteEineReiheNachWesten()
    if weitereReiheRechtsVomHamsterExistiert():
        begibDichRechtsUmInNaechsteReihe()
        ernteEineReiheNachOsten()
    else:
        kehrt()

