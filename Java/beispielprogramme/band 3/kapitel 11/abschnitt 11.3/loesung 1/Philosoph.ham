/*class*//*
 Windows:
 CLASSPATH: .;Programme\beispielprogramme\band 3
 Linux, Solaris:
 CLASSPATH: .:Programme/beispielprogramme/band 3
*/
import util.AllroundHamster;

class Philosoph extends AllroundHamster {

    Philosoph(int r, int s, int b) {
        super(r, s, b, 0);
    }

    public void lebe() {
        this.start();
    }

    public void run() {
        while (true) {
            this.denken();
            this.nimmGabeln();
            this.essen();
            this.gibGabeln();
        }
    }

    private void nimmGabeln() {

        // nimm linke Gabel
        this.linksUm();
        this.vor();
        this.nimm();
        this.kehrt();
        this.vor();

        // nimm rechte Gabel
        this.vor();
        this.nimm();

        // zurueck zum Platz
        this.kehrt();
        this.vor();
        this.rechtsUm();
    }

    private void gibGabeln() {

        // gib linke Gabel
        this.linksUm();
        this.vor();
        this.gib();
        this.kehrt();
        this.vor();

        // gib rechte Gabel
        this.vor();
        this.gib();

        // zurueck zum Platz
        this.kehrt();
        this.vor();
        this.rechtsUm();
    }

    private void denken() {
        int bedenkZeit = (int) (Math.random() * 5000);
        this.schlafen(bedenkZeit);
    }

    private void essen() {
        this.schreib("Hmmmm, das schmeckt!");
        int kauZeit = (int) (Math.random() * 3000);
        this.schlafen(kauZeit);
    }

    public synchronized void nimm() {
        Object kachel = this.getKachel();
        synchronized (kachel) {
            while (!this.kornDa()) {
                try {
                    kachel.wait();
                } catch (InterruptedException exc) {
                }
            }
            super.nimm();
        }
    }

    public synchronized void gib() {
        Object kachel = this.getKachel();
        synchronized (kachel) {
            super.gib();
            kachel.notifyAll();
        }
    }
}